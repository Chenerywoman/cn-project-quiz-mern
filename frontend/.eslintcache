[{"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/index.js":"1","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/App.js":"2","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Home.js":"3","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Quiz.js":"4","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Selection.js":"5","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/helpers.js":"6","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Profile.js":"7"},{"size":198,"mtime":1610628160471,"results":"8","hashOfConfig":"9"},{"size":1028,"mtime":1610632403891,"results":"10","hashOfConfig":"9"},{"size":137,"mtime":1610553555120,"results":"11","hashOfConfig":"9"},{"size":4214,"mtime":1610631859997,"results":"12","hashOfConfig":"9"},{"size":2531,"mtime":1610632403891,"results":"13","hashOfConfig":"9"},{"size":2643,"mtime":1610568761013,"results":"14","hashOfConfig":"9"},{"size":2293,"mtime":1610632403891,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lkq1g9",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/index.js",[],"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/App.js",["35","36"],"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Home.js",[],["37","38"],"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Quiz.js",["39"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n// import scrambleAnswers from  '../helpers';\n\nconst Quiz = () => {\n\n     // this will be passed down from App state in future iteration\n    const [category, setCategory] = useState('');\n     // this will be passed down from App state in future iteration\n    const [level, setLevel] = useState('');\n    const [questions, setQuestions] = useState([]);\n    const [answers, setAnswers] = useState([false, false, false, false, false, false, false, false, false, false]);\n    const [backendResponse, setBackendResponse] = useState(\"\");\n\n    const scrambleAnswers = (questions) => {\n\n        const questionandAnswers = questions.reduce((acc, curr, ind) => {\n    \n            let answers = [{answer: curr.correct_answer, correct: true, selected: false}, {answer: curr.incorrect_answers[0], correct:false, selected: false}, {answer: curr.incorrect_answers[1], correct:false, selected: false}, {answer: curr.incorrect_answers[2], correct:false, selected: false}];\n            let mixedAnswers = [];\n            \n            let num = 4;\n            \n            for (let i = 0; i < 4; i++){\n    \n                let randInt = Math.floor(Math.random() * num);\n    \n                num--\n    \n                mixedAnswers.push(answers[randInt]);\n                answers.splice(randInt, 1)\n    \n            }\n    \n            acc.push({number: `Question${ind}`, question: curr.question, answers: mixedAnswers});\n           return acc;\n    \n        }, [])\n        return questionandAnswers;\n        \n    \n    };\n\n    const fetchQuestions = async () => {\n\n        try {\n            const response = await axios.get('https://opentdb.com/api.php?amount=10&category=10&difficulty=easy&type=multiple');\n\n            let questionsAndScrambledAnswers = scrambleAnswers(response.data.results);\n    \n            setQuestions(questionsAndScrambledAnswers);\n            setCategory(response.data.results[0].category);\n            setLevel(response.data.results[0].difficulty);\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    const onRadioChange = (answerInd, questionInd, event) => {\n\n        let correctOrIncorrect = questions[questionInd].answers[answerInd].correct;\n        let check = event.target.value;\n\n        const answersPlaceholder = [...answers]\n        answersPlaceholder.splice(questionInd, 1, correctOrIncorrect)\n\n        setAnswers(answersPlaceholder)\n    }\n\n    const formHandler = async (event) => {\n\n        event.preventDefault();\n    \n        console.log(answers)\n\n        const body = {\n            answers: answers\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const response = await axios.post('/quiz', body, config);\n        console.log(response);\n\n        // setBackendResponse(response.data.message)\n\n    }\n\n    useEffect(() => fetchQuestions(), [])\n\n    // console.log(questions)\n    // console.log(answers)\n    return (\n      <div>\n        <h1>Quiz Page</h1>\n        <h2>Category:{category} </h2>\n        <h2>Difficulty:{level}</h2>\n            <form onSubmit={formHandler}>\n                {questions.map((question, questionInd) => {\n                    return (\n                            <div key={questionInd} >\n                                <p> {question.question} </p>\n                                {question.answers.map((answer, answerInd, arr) => {\n                                    return(\n                                        <div key={answerInd}>\n                                            <label htmlFor={question.number}>{answer.answer}</label>\n                                            <input type=\"radio\" name={question.number} value={answer.correct} onChange={(event) => onRadioChange(answerInd, questionInd, event)}/>\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        )\n                    })\n                }\n                <input type=\"submit\" value=\"Submit\" />\n            </form>            \n        </div>\n    )\n}\n\nexport default Quiz\n","/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Selection.js",[],"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/helpers.js",["40"],"// const receivedQuestions = [{\n//     category: \"Entertainment: Books\",\n//     correct_answer: \"1984\",\n//     difficulty: \"easy\",\n//     incorrect_answers: [\"The Old Man and the Sea\", \"Catcher and the Rye\", \"To Kill a Mockingbird\"],\n//     question: \"George Orwell wrote this book, which is often considered a statement on government oversight.\",\n//     type: \"multiple\"\n// }, {\n//     category: \"Entertainment: Books\",\n//     correct_answer: \"Frankenstein\",\n//     difficulty: \"easy\",\n//     incorrect_answers: [\"Dracula\", \"The Strange Case of Dr. Jekyll and Mr. Hyde \", \"The Legend of Sleepy Hollow\"],\n//     question: \"Which famous book is sub-titled &#039;The Modern Prometheus&#039;?\",\n//     type: \"multiple\"\n// }, {\n//     category: \"Entertainment: Books\",\n//     correct_answer: \"Dr. Seuss\",\n//     difficulty: \"easy\",\n//     incorrect_answers: [\"Beatrix Potter\", \"Roald Dahl\", \"A.A. Milne\"],\n//     question: \"&quot;Green Eggs And Ham&quot; is a book by which author?\",\n//     type: \"multiple\",\n// }]\n\n// const getQuestionsAndAnswers = (questions) => {\n\n//     const retrievedQuestionsAndAnswers= questions.reduce((acc, curr, ind, arr) => {\n      \n//        acc.push({question: curr.question, answers: [{answer: curr.correct_answer, correct: true}, {answer: curr.incorrect_answers[0], correct:false}, {answer: curr.incorrect_answers[1], correct:false}, {answer: curr.incorrect_answers[2], correct:false}]});\n//        return acc;\n\n//     }, [])\n\n//     console.log(retrievedQuestionsAndAnswers[0].question)\n//     console.log(retrievedQuestionsAndAnswers[0].answers[0].answer)\n// };\n\n// getQuestionsAndAnswers(receivedQuestions);\n\nconst scrambleAnswers = (questions) => {\n\n    const questionandAnswers = questions.reduce((acc, curr) => {\n\n        let answers = [{answer: curr.correct_answer, correct: true}, {answer: curr.incorrect_answers[0], correct:false}, {answer: curr.incorrect_answers[1], correct:false}, {answer: curr.incorrect_answers[2], correct:false}];\n        let mixedAnswers = [];\n        \n        let num = 4;\n        \n        for (let i = 0; i < 4; i++){\n\n            let randInt = Math.floor(Math.random() * num);\n\n            num--\n\n            mixedAnswers.push(answers[randInt]);\n            answers.splice(randInt, 1)\n\n        }\n\n        acc.push({question: curr.question, answers: mixedAnswers});\n       return acc;\n\n    }, [])\n\n    return questionandAnswers;\n\n};\n\nconst helpers = {\n    scrambleAnswers\n}\n\nexport default helpers;\n\n// console.log(scrambleAnswers(receivedQuestions))\n// console.log(scrambleAnswers(receivedQuestions)[1].answers)\n// console.log(scrambleAnswers(receivedQuestions)[2].answers)\n\n\n\n\n",["41","42"],"/Users/codenation/Documents/Rachel's work/cn-project-quiz-mern/frontend/src/components/Profile.js",["43","44"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\nconst Profile = () => {\n    const [users, setUsers] = useState();\n\n\n    const fetchData = async () => {\n        const response = await axios.get('/api/profile');\n        console.log(response.data.users.name);\n        console.log(response.data.results.time);\n        // setUsers(response.data)\n    }\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    return (\n        <div>\n            <h1>Profile Page</h1>\n\n            <div id=\"left-side\" >\n                <div id=\"personal-info\">\n                    <h3>Your Information</h3>\n\n                    <h5>Name: </h5>\n                    {/* <p>{name}</p> */}\n\n                    <h5>Email: </h5>\n                    {/* <p>{email}</p> */}\n                </div>  \n\n                <div id=\"stats-info\">\n                    <h3>Your Stats</h3>\n\n                    <h5>x Quizzes Taken</h5>\n                    {/* <p>{totalQuiz}</p> */}\n\n                    <h5>Total Score: </h5>\n                    {/* <p>{totalScore}</p> */}\n\n                    <h5>Average Score: </h5>\n                    {/* <p>{AvScore}</p> */}\n\n                    <h5>Fastest Time: </h5>\n                    {/* <p>{fastTime}</p> */}\n\n                    <h5>Average Time: </h5>\n                    {/* <p>{avTime}</p> */}\n\n                    <h5>Ranking: </h5>\n                    {/* <p>{position}</p> */}\n                </div>    \n            </div>\n\n            <div id=\"right-side\" >\n                <div id=\"leaderboard-info\">{/*Require if statement*/}\n                    <h2>Congratulations!</h2>\n                    <h5>You are {/*topPosition*/} on the Leaderboard</h5>\n                </div>  \n\n                <div id=\"last-quiz-info\">\n                    <h3>The Results of Your Last Quiz are:</h3>\n\n                    <h5>Score: </h5>\n                    {/* <p>{score}</p> */}\n\n                    <h5>Time: </h5>\n                    {/* <p>{time}</p> */}\n\n                    <h5>The Category you chose was: </h5>\n                    {/* <p>{category}</p> */}\n\n                    <h5>The Difficulty you chose was: </h5>\n                    {/* <p>{difficulty}</p> */}\n                </div>   \n            </div>\n\n        </div>\n    )\n}\n\nexport default Profile\n",{"ruleId":"45","severity":1,"message":"46","line":10,"column":10,"nodeType":"47","messageId":"48","endLine":10,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":11,"column":10,"nodeType":"47","messageId":"48","endLine":11,"endColumn":20},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":62,"column":39,"nodeType":"56","endLine":62,"endColumn":41,"suggestions":"57"},{"ruleId":"45","severity":1,"message":"58","line":1,"column":7,"nodeType":"47","messageId":"48","endLine":1,"endColumn":24},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},{"ruleId":"45","severity":1,"message":"61","line":6,"column":12,"nodeType":"47","messageId":"48","endLine":6,"endColumn":17},{"ruleId":"45","severity":1,"message":"62","line":6,"column":19,"nodeType":"47","messageId":"48","endLine":6,"endColumn":27},"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","'difficulty' is assigned a value but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.","ArrayExpression",["65"],"'receivedQuestions' is assigned a value but never used.",["63"],["64"],"'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [fetchQuestions]",{"range":"68","text":"69"},[1891,1893],"[fetchQuestions]"]