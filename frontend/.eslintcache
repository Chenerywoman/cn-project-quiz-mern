[{"C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\index.js":"1","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\App.js":"2","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Home.js":"3","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Selection.js":"4","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Quiz.js":"5","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Profile.js":"6"},{"size":209,"mtime":1610554554199,"results":"7","hashOfConfig":"8"},{"size":1066,"mtime":1610622856783,"results":"9","hashOfConfig":"8"},{"size":148,"mtime":1610554554197,"results":"10","hashOfConfig":"8"},{"size":2597,"mtime":1610630186527,"results":"11","hashOfConfig":"8"},{"size":3068,"mtime":1610615993014,"results":"12","hashOfConfig":"8"},{"size":2378,"mtime":1610631007553,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"10mot7t",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\index.js",[],["29","30"],"C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\App.js",["31","32"],"import React, {useState} from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Selection from './components/Selection';\r\nimport Quiz from './components/Quiz';\r\nimport Profile from './components/Profile';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [category, setCategory] = useState();\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n\r\n  const updateCategory = (event) => {\r\n    setCategory(event);\r\n  };\r\n\r\n  const updateDifficulty = (event) => {\r\n    setDifficulty(event);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/selection\" render={(props) => \r\n          <Selection \r\n            updateCategory={updateCategory} \r\n            updateDifficulty={updateDifficulty}\r\n            {...props}/>} />\r\n        <Route exact path=\"/quiz\" component={Quiz} />\r\n        <Route exact path=\"/profile\" component={Profile} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Home.js",[],"C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Selection.js",[],"C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Quiz.js",["33"],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n// import scrambleAnswers from  '../helpers';\r\n\r\nconst Quiz = () => {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    // this will be passed down from App state in future iteration\r\n    const [category, setCategory] = useState('')\r\n\r\n    // this will be passed down from App state in future iteration\r\n    const [level, setLevel] = useState('')\r\n\r\n    const scrambleAnswers = (questions) => {\r\n\r\n        const questionandAnswers = questions.reduce((acc, curr, ind) => {\r\n    \r\n            let answers = [{answer: curr.correct_answer, correct: true}, {answer: curr.incorrect_answers[0], correct:false}, {answer: curr.incorrect_answers[1], correct:false}, {answer: curr.incorrect_answers[2], correct:false}];\r\n            let mixedAnswers = [];\r\n            \r\n            let num = 4;\r\n            \r\n            for (let i = 0; i < 4; i++){\r\n    \r\n                let randInt = Math.floor(Math.random() * num);\r\n    \r\n                num--\r\n    \r\n                mixedAnswers.push(answers[randInt]);\r\n                answers.splice(randInt, 1)\r\n    \r\n            }\r\n    \r\n            acc.push({number: `Question${ind}`, question: curr.question, answers: mixedAnswers});\r\n           return acc;\r\n    \r\n        }, [])\r\n    \r\n        return questionandAnswers;\r\n    \r\n    };\r\n\r\n    const fetchQuestions = async () => {\r\n\r\n        try {\r\n            const response = await axios.get('https://opentdb.com/api.php?amount=10&category=10&difficulty=easy&type=multiple');\r\n\r\n            let questionsAndScrambledAnswers = scrambleAnswers(response.data.results);\r\n    \r\n            setQuestions(questionsAndScrambledAnswers);\r\n            setCategory(response.data.results[0].category);\r\n            setLevel(response.data.results[0].difficulty);\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => fetchQuestions(), [])\r\n\r\n\r\n    return (\r\n      <div>\r\n        <h1>Quiz Page</h1>\r\n        <h2>Category:{category} </h2>\r\n        <h2>Difficulty:{level}</h2>\r\n            <form>\r\n                {questions.map((question, ind) => {\r\n                    return (\r\n                            <div key={ind} >\r\n                                <p> {question.question} </p>\r\n                                {question.answers.map((answer, ind, arr) => {\r\n                                    return(\r\n                                        <div key={ind}>\r\n                                            <label htmlFor={question.number}>{answer.answer}</label>\r\n                                            <input type=\"radio\" name={question.number} value={answer.correct} />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n","C:\\Users\\katri\\Desktop\\cn-project-mern-quiz\\frontend\\src\\components\\Profile.js",["34","35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":10,"column":10,"nodeType":"42","messageId":"43","endLine":10,"endColumn":18},{"ruleId":"40","severity":1,"message":"44","line":11,"column":10,"nodeType":"42","messageId":"43","endLine":11,"endColumn":20},{"ruleId":"45","severity":1,"message":"46","line":62,"column":39,"nodeType":"47","endLine":62,"endColumn":41,"suggestions":"48"},{"ruleId":"40","severity":1,"message":"49","line":6,"column":12,"nodeType":"42","messageId":"43","endLine":6,"endColumn":17},{"ruleId":"40","severity":1,"message":"50","line":6,"column":19,"nodeType":"42","messageId":"43","endLine":6,"endColumn":27},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'category' is assigned a value but never used.","Identifier","unusedVar","'difficulty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.","ArrayExpression",["53"],"'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [fetchQuestions]",{"range":"56","text":"57"},[1952,1954],"[fetchQuestions]"]